// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaBancario.Repository.DataContext;

#nullable disable

namespace SistemaBancario.Repository.Migrations
{
    [DbContext(typeof(SistemaBancarioDbContext))]
    [Migration("20230330181301_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Cuenta", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoCuenta")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSaldo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCuenta")
                        .HasColumnType("int");

                    b.HasKey("Id", "Documento", "NumeroCuenta");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Transaccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CuentaDocumento")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CuentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CuentaNumeroCuenta")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoTransaccion")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId", "CuentaDocumento", "CuentaNumeroCuenta");

                    b.ToTable("Transaccion");
                });

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Transferencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("NombreBanco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransaccionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TransaccionId");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Transaccion", b =>
                {
                    b.HasOne("SistemaBancario.Entities.POCOs.Cuenta", "Cuenta")
                        .WithMany("Transacciones")
                        .HasForeignKey("CuentaId", "CuentaDocumento", "CuentaNumeroCuenta");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Transferencia", b =>
                {
                    b.HasOne("SistemaBancario.Entities.POCOs.Transaccion", "Transaccion")
                        .WithMany()
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("SistemaBancario.Entities.POCOs.Cuenta", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
